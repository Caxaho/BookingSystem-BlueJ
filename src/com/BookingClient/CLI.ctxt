#BlueJ class context
comment0.target=CLI
comment0.text=\r\n\ Utility\ class\ to\ print\ to\ the\ CLI\ and\ get\ user\ input.\r\n
comment1.params=
comment1.target=CLI()
comment10.params=currentUser
comment10.target=int\ loggedInChoice(com.BookingClient.User)
comment10.text=\r\n\ Executed\ when\ in\ the\ 'LOGGED_IN'\ state\ in\ the\ ProgramState\ state\ machine.\r\n\ @param\ currentUser\ Currently\ logged-in\ user.\r\n\ @return\ Choice\ made\ by\ user\ (Book\ Show\ 'b'\ \=\ 0,\ Cancel\ Show\ 'c'\ \=\ 1,\ exit\ 'e'\ \=\ -1,\ invalid\ choice\ \=\ -1).\r\n\ @throws\ IllegalArgumentException\ When\ a\ user\ selects\ an\ action\ that\ they\ are\ not\ permitted\ to\ perform.\r\n
comment11.params=
comment11.target=java.util.Calendar[]\ getFutureDateRange()
comment11.text=\r\n\ Validates\ and\ retrieves\ user\ input\ for\ a\ date\ range\ in\ the\ future\r\n\ @return\ Date\ range\ as\ Calendar[2]\ (if\ valid),\ otherwise\ date\ range\ from\ present\ time\ to\ 1\ year\ in\ the\ future.\r\n\ @throws\ ParseException\ If\ dates\ fail\ to\ parse\ after\ they\ have\ been\ validated.\ Should\ be\ impossible.\r\n\ @throws\ IllegalArgumentException\ If\ invalid\ date\ format\ is\ inputted\ by\ the\ user.\r\n
comment12.params=venue\ acceptDateRange
comment12.target=int\ selectShow(com.BookingClient.Venue,\ boolean)
comment12.text=\r\n\ Retrieves\ and\ validates\ show\ selection\ from\ user.\r\n\ @param\ venue\ Venue\ to\ retrieve\ the\ shows\ of.\r\n\ @param\ acceptDateRange\ If\ true,\ it\ will\ request\ a\ date\ range\ from\ the\ user\ before\ displaying\ shows.\r\n\ @return\ Show\ ID\ picked\ by\ the\ user,\ or\ -1\ if\ 'e'\ is\ inputted.\r\n\ @throws\ IllegalArgumentException\ On\ user\ input\ validation\ error.\r\n\ @throws\ ParseException\ On\ user\ input\ parse\ error.\ The\ parsing\ occurs\ after\ validation\ so\ this\ exception\ should\ never\ occur.\r\n
comment13.params=
comment13.target=int\ selectSeatingTypeChoice()
comment13.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ which\ type\ of\ seat\ selection\ they\ would\ like\ to\ choose.\r\n\ @return\ Choice\ made\ by\ user\ (Automatic\ Seat\ Selection\ 'a'\ \=\ 0,\ Interactive\ Seat\ Selection\ 'i'\ \=\ 1,\ exit\ 'e'\ \=\ 2,\ invalid\ choice\ \=\ -1).\r\n
comment14.params=venue\ showID
comment14.target=void\ displaySeats(com.BookingClient.Venue,\ int)
comment14.text=\r\n\ Displays\ the\ seats\ to\ the\ user\ and\ indicates\ if\ the\ seats\ are\ empty,\ held,\ or\ booked.\r\n\ @param\ showID\ Show\ ID\ of\ the\ show\ to\ display\ seats\ for.\r\n\ @throws\ RuntimeException\ When\ there\ is\ an\ error\ retrieving\ the\ seating\ data.\r\n
comment15.params=venue\ showID
comment15.target=int\ chooseNumberOfSeats(com.BookingClient.Venue,\ int)
comment15.text=\r\n\ Retrieve\ and\ validate\ user\ input\ for\ number\ of\ seats\ to\ purchase.\r\n\ @param\ showID\ Show\ ID\ for\ the\ show\ the\ user\ is\ selecting\ tickets\ for.\r\n\ @return\ Number\ of\ seats/tickets\ chosen\ by\ the\ user.\r\n
comment16.params=
comment16.target=float[]\ selectPriceRange()
comment16.text=\r\n\ Retrieve\ and\ validate\ user\ input\ for\ price\ range\ of\ seats\r\n\ @return\ float[2]\ with\ the\ first\ element\ being\ the\r\n
comment17.params=venue\ showID\ seatSelection\ autoPickSeats
comment17.target=boolean\ seatSelection(com.BookingClient.Venue,\ int,\ java.util.LinkedList,\ boolean)
comment17.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ seat\ selection.\r\n\ @param\ showID\ Show\ ID\ for\ show\ that\ the\ user\ is\ selecting\ seats\ for.\r\n\ @param\ seatSelection\ LinkedList\ to\ store\ the\ current\ seats\ selected.\r\n\ @param\ autoPickSeats\ If\ True,\ automatic\ seat\ selection\ will\ take\ place\ before\ the\ user\ is\ taken\ to\ interactive\ seat\ selection.\r\n\ @return\ True\ if\ valid\ seat\ selection.\r\n
comment18.params=currentUser\ showID\ seatSelection
comment18.target=boolean\ paymentChoice(com.BookingClient.User,\ int,\ java.util.LinkedList)
comment18.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ payment\ information.\r\n\ @param\ showID\ Show\ ID\ for\ the\ show\ that\ the\ user\ is\ buying\ tickets\ for.\r\n\ @param\ seatSelection\ Array\ List\ of\ seats\ that\ the\ user\ has\ currently\ selected.\r\n\ @param\ currentUser\ Currently\ logged-in\ user.\r\n\ @return\ True\ if\ valid\ payment\ information.\r\n
comment19.params=user\ venue
comment19.target=void\ cancelShowChoice(com.BookingClient.User,\ com.BookingClient.Venue)
comment19.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ show\ that\ a\ user\ wishes\ to\ cancel,\ and\ cancels\ the\ show\ if\ a\ valid\ choice\ is\ chosen.\r\n\ @param\ user\ User\ that\ is\ cancelling\ a\ show.\r\n
comment2.params=showOptionString\ args
comment2.target=void\ printChoices(boolean,\ java.lang.String[])
comment2.text=\r\n\ Prints\ any\ number\ of\ strings\ on\ a\ new\ line\ per\ string,\ with\ the\ optional\ starting\ string\ "Please\ select\ an\ option\:"\r\n\ @param\ showOptionString\ Adds\ "Please\ select\ an\ option\:\\n"\ at\ the\ beginning\ of\ the\ print\ statement\ if\ True,\ otherwise\ it\ leaves\ it\ blank.\r\n\ @param\ args\ Any\ number\ of\ strings\ to\ print.\r\n
comment20.params=
comment20.target=int\ manageShows()
comment20.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ selecting\ an\ option\ to\ manage\ the\ shows.\r\n\ @return\ Choice\ made\ by\ user\ (delete\ show\ 'd'\ \=\ 0,\ add\ show\ 'a'\ \=\ 1,\ reschedule\ show\ 'r'\ \=\ 2,\ exit\ 'e'\ \=\ -1,\ invalid\ choice\ \=\ -1).\r\n
comment21.params=venue
comment21.target=void\ removeShow(com.BookingClient.Venue)
comment21.text=\r\n\ Deletes\ a\ show\ for\ a\ specified\ venue\ with\ validated\ user\ input.\r\n\ @param\ venue\ Venue\ to\ remove\ show\ from.\r\n\ @throws\ RuntimeException\ If\ invalid\ show\ selection.\r\n
comment22.params=venue
comment22.target=com.BookingClient.Show\ createShow(com.BookingClient.Venue)
comment22.text=\r\n\ Creates\ a\ show\ for\ a\ specified\ venue\ with\ validated\ user\ input.\r\n\ @param\ venue\ Venue\ to\ create\ show\ for.\r\n\ @return\ Show\ object\ with\ user\ inputted\ and\ validated\ values.\r\n\ @throws\ CancellationException\ If\ exit\ ('e')\ is\ inputted.\r\n
comment23.params=venue
comment23.target=void\ rescheduleShow(com.BookingClient.Venue)
comment23.text=\r\n\ Reschedules\ a\ show\ from\ a\ given\ venue.\r\n\ @param\ venue\ Venue\ to\ retrieve\ shows\ from.\r\n\ @throws\ RuntimeException\ If\ invalid\ show\ selection,\ or\ invalid\ Date\ and\ Time\ inputted.\r\n
comment24.params=
comment24.target=int\ managePromotions()
comment24.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ selecting\ an\ option\ to\ manage\ the\ promotions.\r\n\ @return\ Choice\ made\ by\ user\ (apply\ promotion\ 'a'\ \=\ 0,\ remove\ promotion\ 'r'\ \=\ 1,\ create\ promotion\ 'p'\ \=\ 2,\ exit\ 'e'\ \=\ -1,\ invalid\ choice\ \=\ -1).\r\n
comment25.params=venue
comment25.target=void\ applyPromotion(com.BookingClient.Venue)
comment25.text=\r\n\ Apply\ a\ promotion\ to\ a\ selected\ show.\r\n\ @param\ venue\ Venue\ to\ select\ shows\ from.\r\n\ @throws\ RuntimeException\ If\ invalid\ show\ selection.\r\n
comment26.params=venue
comment26.target=void\ createPromotion(com.BookingClient.Venue)
comment26.text=\r\n\ Create\ a\ new\ promotion\ for\ a\ specified\ venue.\r\n\ @param\ venue\ Venue\ to\ create\ promotion\ for.\r\n
comment27.params=venue
comment27.target=void\ removePromotion(com.BookingClient.Venue)
comment27.text=\r\n\ Remove\ promotion\ from\ a\ show.\r\n\ @param\ venue\ Venue\ to\ remove\ a\ show\ promotion\ from.\r\n
comment3.params=username\ password\ users
comment3.target=com.BookingClient.User\ login(java.lang.String,\ java.lang.String,\ java.util.ArrayList)
comment3.text=\r\n\ Logs\ the\ user\ in\ with\ given\ parameters.\r\n\ @param\ username\ Username\ for\ login.\r\n\ @param\ password\ Password\ for\ login.\r\n\ @param\ users\ Array\ List\ of\ all\ registered\ users.\r\n\ @return\ User\ on\ successful\ login.\r\n\ @throws\ IllegalArgumentException\ When\ invalid\ username\ or\ password.\r\n
comment4.params=date
comment4.target=boolean\ validFutureDate(java.lang.String)
comment4.text=\r\n\ Validates\ a\ date\ to\ be\ in\ the\ future.\r\n\ @param\ date\ Date\ to\ validate.\r\n\ @return\ True\ if\ date\ is\ the\ correct\ format\ (dd/MM/yyyy)\ and\ in\ the\ future.\r\n
comment5.params=dateTime
comment5.target=boolean\ validFutureDateTime(java.lang.String)
comment5.text=\r\n\ Validates\ if\ an\ input\ String\ is\ a\ future\ date\ and\ time\ with\ the\ format\ 'dd/MM/yyyy\ 00\:00'\ where\ '00\:00'\ is\ a\ 24-hour\ time.\r\n\ @param\ dateTime\ Input\ String.\r\n\ @return\ True\ if\ valid\ future\ date\ and\ time.\r\n
comment6.params=dateTime
comment6.target=java.util.Calendar\ createDateTime(java.lang.String)
comment6.text=\r\n\ Creates\ Calendar\ object\ if\ inputted\ String\ is\ a\ valid\ date\ and\ time\ (with\ the\ format\ 'dd/MM/yyyy\ 00\:00'\r\n\ where\ '00\:00'\ is\ a\ 24-hour\ time)\ in\ the\ future.\r\n\ @param\ dateTime\ Input\ String\r\n\ @return\ Calendar\ object\ with\ date\ and\ time\ set\ to\ the\ same\ as\ the\ input\ String\ (if\ valid\ format).\r\n\ @throws\ IllegalArgumentException\ If\ input\ String\ is\ an\ invalid/incorrect\ format.\r\n
comment7.params=
comment7.target=int\ start()
comment7.text=\r\n\ Retrieves\ and\ validates\ user\ input\ for\ selecting\ an\ option\ when\ in\ the\ initial\ program\ state.\r\n\ @return\ Choice\ made\ by\ user\ (login\ 'l'\ \=\ 0,\ register\ 'r'\ \=\ 1,\ exit\ 'e'\ \=\ 2,\ invalid\ choice\ \=\ -1).\r\n
comment8.params=minRegistrationAge
comment8.target=com.BookingClient.User\ registration(int)
comment8.text=\r\n\ Retrieves\ and\ validates\ user\ input\ to\ create\ a\ user.\r\n\ @return\ User\ (Customer)\ if\ account\ creation\ was\ successful.\r\n\ @throws\ CancellationException\ If\ user\ inputs\ 'e'.\r\n
comment9.params=users
comment9.target=com.BookingClient.User\ loginChoice(java.util.ArrayList)
comment9.text=\r\n\ Retrieve\ and\ validate\ input\ from\ user\ to\ attempt\ to\ login.\r\n\ @return\ True\ if\ successful\ login.\r\n\ @throws\ CancellationException\ or\ IllegalArgumentException\ if\ user\ inputs\ 'e'\ for\ exit,\ or,\ invalid\ username\ or\ password\ was\ inputted.\r\n
numComments=28
